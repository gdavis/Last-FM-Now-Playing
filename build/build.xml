<?xml version="1.0" encoding="UTF-8"?>

<!--
  Build items for the orange-actionscript project.
  @author Matthew Kitt
  @author Ryan Boyajian
  @author Sean Dougherty

  ant howto: http://ant.apache.org/manual/running.html

  TODO: Enable junit reporting with asunit.
  TODO: Figure out a way to get success messages from asunit to the tasks so we can fail the ant tasks if a unit test fails.
  TODO: There is a an XSLT stylesheet needed for link reports, we will add this in later for now see MK.
  TODO: Tie in the swc generation to a release task.
-->
<project name="Last-FM-Now-Playing" basedir="../" default="compile-swf">

<!-- PROPERTY ASSIGNMENT & INITIALIZATION ========================================================================== -->

    <!-- Setup the prefix for all environment variables -->
    <property environment="env."/>

    <!-- System environment must contain FLEX_HOME variable that points to Flex SDK. -->
	<property name="FLEX_HOME" location="${env.FLEX_HOME}"/>

  	<!-- Include the properties for running builds -->
  	<property file="./build/build.properties"/>

<!-- MELT FACES PUBLICLY =========================================================================================== -->

  <target name="print" description="Test">
    <echo>${FLEX_HOME}</echo>
  </target>

    <!--
    public -->
    <target name="compile-swf"
      description="Compiles the barebones package using MXMLC">
        <echo>[compile-swf] Compiling the application</echo>
        <antcall target="-compile-mxmlc">
            <param name="param.mainclass" value="${app.main}"/>
            <param name="param.classpath" value="${src}"/>
            <param name="param.swf" value="${app.swf}"/>
            <param name="param.width" value="${app.width}"/>
            <param name="param.height" value="${app.height}"/>
            <param name="param.color" value="${app.color}"/>
            <param name="param.isHeadless" value="true"/>
            <param name="param.isDebug" value="${app.isDebug}"/>
            <param name="param.reportname" value="${app.reportname}"/>
        </antcall>
    	
        	
    	<!-- <fdt.extSWFViewer.startSWF file="${basedir}/start.swf" width="640" height="480" 
         flashvars="a=1&amp;b=2" focusprocess="flash.exe"/> -->
    	<antcall target="-fdt-extSWFViewer-startSWF">
    	</antcall>
    	
		<antcall target="-fdt-start-debugger">
		</antcall>
        <echo>[compile-swf] Finshing compiling application.</echo>
    </target>


<!-- FDT SPECIFIC TASKS ============================================================================================ -->

    <!--
    private: Starts up the FDT bugger for logging to the console panel. Requires the FDT plugin or standalone IDE.
    Note: requires the -compile-mxmlc task -debug argument set to true.
  -->
    <target name="-fdt-start-debugger">
      <fdt.startDebugger projectname="${project.name}" savelocation="bin"/>
    </target>
	
	
    <target name="-fdt-extSWFViewer-startSWF">
    	<fdt.extSWFViewer.startSWF file="${app.swf}" width="${app.width}" height="${app.height}" 
    		focusprocess="/Applications/Adobe\ Flash\ CS5.5/Players/Debug/Flash\ Player\ Debugger.app"/>
    </target>

<!-- PRIVATE COMPILATION =========================================================================================== -->

    <!--
    private: Compiles a swf file using the mxmlc compiler.
    @param param.mainclass  The Main class used to generate the swf.
    @param param.classpath  The class path directory used by the compiler other than src.
    @param param.swf    The output file created by the mxmlc compiler.
    @param param.width    The width value of the swf.
    @param param.height   The height value of the swf.
    @param param.color    The background color of the swf.
    @param param.isHeadless Whether this swf is compiled as headless.
    @param param.isDebug  Whether to compile in debug mode, benchmark and verbose stack traces.
    @param param.reportname The name given to the link report file.
  -->
  <target name="-compile-mxmlc">
      <echo>[-compile-mxmlc] Compiling MXMLC</echo>
      <java jar="${FLEX_HOME}/lib/mxmlc.jar" dir="${FLEX_HOME}/frameworks" fork="true" failonerror="true">
        <arg value="${param.mainclass}"/>
          <arg value="-source-path+=${src}"/>
          <arg value="-source-path+=${param.classpath}"/>
          <arg value="-output=${param.swf}"/>
          <arg value="-library-path+=${libs}"/>
          <arg value="-target-player=${target.player}"/>
          <arg value="-default-size=${param.width},${param.height}"/>
          <arg value="-default-background-color=${param.color}"/>
          <arg value="-default-frame-rate=${framerate}"/>
          <arg value="-headless-server=${param.isHeadless}"/>
          <arg value="-debug=${param.isDebug}"/>
          <arg value="-benchmark=${param.isDebug}"/>
          <arg value="-verbose-stacktraces=${param.isDebug}"/>
          <arg value="-incremental=true"/>
          <arg value="-use-network=true"/>
          <arg value="-as3=true"/>
          <arg value="-optimize=true"/>
          <arg value="-show-actionscript-warnings=true"/>
      </java>
      <echo>[-compile-mxmlc] MXMLC compiled</echo>
  </target>

</project>
